name: Verify oci image

on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string
      digest:
        required: true
        type: string
      registry:
        type: string
        default: 'ghcr.io'
      registry-username:
        required: true
        type: string
        default: 'username'
    secrets:
      registry-password:
        required: false
jobs:
  sign:
    name: Sign image and generate sbom
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # tag=v3
      - name: Login to container registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2.1.0
        with:
          registry: ${{ inputs.registry }}
          username: ${{ inputs.registry-username }}
          password: ${{ secrets.registry-password }}
      - name: Run Trivy in fs mode to generate SBOM
        uses: aquasecurity/trivy-action@e5f43133f6e8736992c9f3c1b3296e24b37e17f2 # master
        with:
          scan-type: 'fs'
          format: 'spdx-json'
          output: 'spdx.sbom.json'
      - name: Install cosign
        uses: sigstore/cosign-installer@main
      - name: Sign image and sbom
        run: |
          #!/usr/bin/env bash
          set -euo pipefail
          cosign sign -a git_sha=$GITHUB_SHA ${IMAGE_URI_DIGEST} --yes
          cosign attach sbom --sbom spdx.sbom.json ${IMAGE_URI_DIGEST}
          cosign sign -a git_sha=$GITHUB_SHA --attachment sbom ${IMAGE_URI_DIGEST} --yes
        shell: bash
        env:
          IMAGE_URI_DIGEST: ${{ inputs.image }}@${{ inputs.digest }}